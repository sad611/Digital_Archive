services:
  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: ./backend
    container_name: nest-backend
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/mydb
      ENCRYPT_KEY: 9FHUI8evi3XY3yEGUeKU0JisHQiPV1Kz
      # For file watcher inside container (Node.js specific):
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - /app/node_modules
    command: npm run start:dev
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
          ignore:
            - node_modules/
        - action: sync
          path: ./backend/package.json
          target: /app/package.json
        - action: rebuild
          path: ./backend/package-lock.json

  frontend:
      build: ./frontend
      container_name: react-frontend
      ports:
        - '5173:5173'
      environment:
        - CHOKIDAR_USEPOLLING=true
        - WATCHPACK_POLLING=true
        - REACT_APP_API_URL=http://localhost:3000
      volumes:
        - ./frontend:/app
        - /app/node_modules
      working_dir: /app
      command: npm start
      depends_on:
        - backend
      env_file:
        - ./frontend/.env

volumes:
  postgres_data: